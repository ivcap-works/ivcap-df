Search.setIndex({"docnames": ["README", "autoapi/index", "autoapi/ivcap_df/column/index", "autoapi/ivcap_df/connector/index", "autoapi/ivcap_df/dataSet/index", "autoapi/ivcap_df/index", "autoapi/ivcap_df/schema/index", "autoapi/ivcap_df/types/index", "conduct", "contributing", "example", "index", "overview"], "filenames": ["README.md", "autoapi/index.rst", "autoapi/ivcap_df/column/index.rst", "autoapi/ivcap_df/connector/index.rst", "autoapi/ivcap_df/dataSet/index.rst", "autoapi/ivcap_df/index.rst", "autoapi/ivcap_df/schema/index.rst", "autoapi/ivcap_df/types/index.rst", "conduct.md", "contributing.md", "example.ipynb", "index.md", "overview.md"], "titles": ["\u2018ivcap_client\u2019 Docs", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ivcap_df.column</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ivcap_df.connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ivcap_df.dataSet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ivcap_df</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ivcap_df.schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ivcap_df.types</span></code>", "Code of Conduct", "Contributing", "Example usage", "ivcap-df", "ivcap-df"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12], "directori": 0, "contains": 0, "": [0, 2, 4, 5, 6, 8, 9], "veri": 0, "simplist": 0, "setup": [0, 9], "creat": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12], "document": [0, 1], "variou": 0, "librari": [0, 11, 12], "function": [0, 6, 9], "data": [0, 2, 4, 5, 6], "model": 0, "us": [0, 2, 3, 5, 6, 8, 9, 10], "sphinx": [0, 1], "befor": [0, 3, 5, 9], "ensur": 0, "all": [0, 2, 3, 4, 5, 6, 7, 8, 9], "requir": [0, 2, 5, 9, 11, 12], "list": [0, 5, 6], "txt": 0, "ar": [0, 4, 5, 6, 8, 9], "instal": [0, 5, 6, 9], "after": 0, "make": [0, 8, 9], "html": 0, "should": [0, 2, 3, 5, 6, 9, 11, 12], "build": 0, "an": [0, 2, 3, 5, 6, 8, 11, 12], "version": [0, 5, 6, 8, 9], "_build": 0, "page": 1, "contain": [1, 2, 4, 5, 6], "auto": 1, "gener": [1, 2, 5], "1": [1, 2, 3, 5, 6, 8, 10], "ivcap_df": [1, 11, 12], "column": [1, 4, 5, 6, 11, 12], "connector": [1, 2, 5, 6, 11, 12], "dataset": [1, 2, 5, 6], "schema": [1, 2, 3, 4, 5], "type": [1, 2, 3, 4, 5, 6, 11, 12], "autoapi": 1, "namespace_ivcap": 2, "entity_col_nam": [2, 5, 6], "_id": [2, 5], "any_schema": [2, 5], "urn": [2, 5, 6], "ivcap": 2, "ani": [2, 3, 4, 5, 6, 8, 9], "coltyp": [2, 4, 5, 11, 12], "sourc": [2, 3, 4, 5, 6, 7], "base": [2, 3, 5, 7], "enum": [2, 5], "enumer": [2, 5], "deriv": [2, 5], "from": [2, 5, 6, 8, 11, 12], "defin": [2, 4, 5, 6, 8], "new": [2, 5], "entiti": [2, 3, 4, 5, 6], "uuid": [2, 5, 6], "ref": [2, 5], "float16": [2, 5], "float32": [2, 5], "float64": [2, 5, 11, 12], "int8": [2, 5], "int16": [2, 5], "int32": [2, 5], "int64": [2, 5, 11, 12], "uint8": [2, 5], "uint16": [2, 5], "uint32": [2, 5], "uint64": [2, 5], "datetime64_ns_tz": [2, 5], "datetime_tz": [2, 5], "date": [2, 5, 11, 12], "string": [2, 4, 5, 6, 11, 12], "boolean": [2, 5], "jsonschematyp": 2, "uuid_r": 2, "validate_uuid": 2, "e": [2, 8], "bool": [2, 4, 5, 6], "validate_urn": 2, "seriesvalid": 2, "pandatyp": 2, "name": [2, 3, 4, 5, 6, 9, 10, 11, 12], "str": [2, 3, 4, 5, 6], "ctype": [2, 5], "kwarg": [2, 3, 4, 5, 6], "descript": [2, 5, 6, 11, 12], "default": [2, 3, 4, 5, 6], "classmethod": [2, 4, 5, 6], "from_dict": [2, 5, 6], "definit": [2, 5, 6, 11, 12], "dict": [2, 4, 5, 6], "true": [2, 3, 4, 5, 6], "is_nul": [2, 5], "def_valu": [2, 5], "is_valid": [2, 5, 6], "seri": [2, 4, 5, 6], "panda": [2, 3, 4, 5, 6], "check": [2, 5, 9], "i": [2, 3, 4, 5, 6, 8, 9, 11, 12], "approri": [2, 5], "is_equ": [2, 5, 6], "other": [2, 5, 6, 8], "to_json_schema": [2, 5, 6], "hash_valu": [2, 5], "v": [2, 5], "return": [2, 3, 4, 5, 6], "represent": [2, 5, 8], "hash": [2, 4, 5, 6], "paramet": [2, 3, 4, 5, 6], "valu": [2, 4, 5, 6, 11, 12], "A": [2, 3, 4, 5, 6, 11, 12], "id": [2, 3, 4, 5], "__repr__": [2, 4, 5, 6], "repr": [2, 4, 5, 6], "self": [2, 4, 5, 6], "idcolumn": [2, 5, 6, 11, 12], "get_urn_for": [2, 5], "refer": [2, 5, 6], "assum": [2, 5, 6, 11, 12], "The": [2, 3, 4, 5, 6, 8, 9, 11, 12], "referenc": [2, 5, 6], "empti": [2, 5], "part": [2, 5, 9], "refcolumn": [2, 5, 6, 11, 12], "schema_or_urn": [2, 5], "option": [2, 3, 4, 5, 6], "union": [2, 5, 6], "_schema": [2, 5], "schema_nam": [2, 5], "none": [2, 3, 4, 5, 6], "found": [2, 4, 5, 6], "retriev": [2, 5, 6], "rais": [2, 4, 5, 6], "except": [2, 4, 5, 6, 7], "_description_": [2, 5, 6], "element": [2, 3, 5, 6], "create_uuid": [2, 5, 6], "text": [2, 5, 6], "safe_sql_nam": 2, "_create_ivcap_connector": 3, "_create_cozo_connector": 3, "_create_db_connector": 3, "type2klass": 3, "abc": [3, 5], "helper": [3, 5], "provid": [3, 5, 6], "standard": [3, 5], "wai": [3, 5, 8], "inherit": [3, 5], "abstract": [3, 5], "close": [3, 5, 11, 12], "insert_data_fram": [3, 5], "df": [3, 4, 5, 6], "datafram": [3, 4, 5, 6], "ignoreduplicaterecord": [3, 5], "insert": [3, 5, 6], "tabl": [3, 5], "repres": [3, 5, 6, 8], "If": [3, 4, 5, 6, 9], "set": [3, 4, 5, 6, 8, 9], "quietli": [3, 5], "drop": [3, 5], "record": [3, 5], "which": [3, 4, 5, 6, 8], "have": [3, 4, 5, 6, 8, 9], "ident": [3, 5, 6, 8], "what": [3, 5, 8], "alreadi": [3, 5], "store": [3, 5], "get_all_for_schema": [3, 5], "get": [3, 5], "access": [3, 5], "queri": [3, 4, 5, 6], "primarili": [3, 5, 6], "control": [3, 5], "vocabulari": [3, 5], "hold": [3, 5, 6], "pd": [3, 5], "query_to_df": [3, 5], "execut": [3, 5, 11, 12], "specif": [3, 5, 8], "result": [3, 4, 5, 6], "register_schema": [3, 5], "failquietli": [3, 4, 5, 6], "fals": [3, 4, 5, 6, 11, 12], "verbos": [3, 4, 5, 6, 11, 12], "regist": [3, 5], "metadata": [3, 5], "registri": [3, 5], "get_schema": [3, 5], "get_all_schemas_for_namespac": [3, 5], "sequenc": [3, 4, 5, 6], "upload_artifact": [3, 5], "file_path": [3, 5], "io_stream": [3, 5], "io": [3, 5], "content_typ": [3, 5], "content_s": [3, 5], "int": [3, 4, 5, 6], "chunk_siz": [3, 5], "maxsiz": [3, 5], "retri": [3, 5], "0": [3, 5], "retry_delai": [3, 5], "30": [3, 5], "ivcap_cli": [3, 5, 9], "artifact": [3, 5], "upload": [3, 5], "either": [3, 5, 6], "identifi": [3, 5, 6], "In": [3, 5, 8, 10], "latter": [3, 5], "case": [3, 5], "need": [3, 5, 11, 12], "file": [3, 5], "stream": [3, 5], "declar": [3, 5], "overal": [3, 5], "size": [3, 4, 5, 6, 8], "don": [3, 5], "t": [3, 5], "know": [3, 5], "chunk": [3, 5], "each": [3, 4, 5, 6], "individu": [3, 5, 8], "number": [3, 4, 5, 6], "attempt": [3, 5], "made": [3, 5], "fail": [3, 5], "how": [3, 5, 9], "long": [3, 5], "second": [3, 5], "we": [3, 5, 8, 11, 12], "wait": [3, 5], "create_connector": [3, 5], "dataitem": [4, 5, 6], "_data": [4, 5], "graph_mani": [4, 5], "seeditem": [4, 5], "depth": [4, 5, 6], "99": [4, 5, 6], "digraph": [4, 5, 6], "graphviz": [4, 5, 6], "fontsiz": [4, 5, 6, 11, 12], "12": [4, 5, 6], "show": [4, 5, 6, 8], "depend": [4, 5, 6], "graph": [4, 5, 6], "item": [4, 5, 6, 11, 12], "level": [4, 5, 6, 8], "expand": [4, 5, 6], "object": [4, 5, 6], "one": [4, 5, 6], "being": [4, 5, 6], "font": [4, 5, 6], "node": [4, 5, 6], "edg": [4, 5, 6], "label": [4, 5, 6], "intern": [4, 5, 6], "report": [4, 5, 6, 8], "visit": [4, 5, 6], "been": [4, 5, 6], "ad": [4, 5, 6, 11, 12], "prop": [4, 5], "tupl": [4, 5, 6], "propnam": [4, 5], "propvalu": [4, 5], "properti": [4, 5, 6], "__hash__": [4, 5], "labelf": [4, 5], "callabl": [4, 5, 6], "add": [4, 5, 6, 9], "add_df": [4, 5], "add_data_item": [4, 5], "query_on": [4, 5, 6], "local_dict": [4, 5, 6], "try": [4, 5, 6], "find": [4, 5, 6], "singl": [4, 5, 6], "map": [4, 5, 6], "variabl": [4, 5, 6], "noth": [4, 5, 6], "otherwis": [4, 5, 6, 8], "multipl": [4, 5, 6], "pf": [4, 5], "fulfil": [4, 5, 6], "isempti": [4, 5], "__version__": [5, 10], "namespac": [5, 6], "column_nam": [5, 6], "urnprefix": [5, 6], "_d": [5, 6], "load": [5, 6], "conn": [5, 6], "walk": [5, 6], "collect": [5, 6], "start": [5, 6], "schemaurn": [5, 6], "reachabl": [5, 6], "through": [5, 6, 9], "row": [5, 6], "discov": [5, 6], "Be": [5, 6], "chatti": [5, 6], "create_urn": [5, 6], "parse_urn": [5, 6], "urn2urn_prefix": [5, 6], "to_dot": [5, 6, 11, 12], "dot": [5, 6], "describ": [5, 6], "link": [5, 6], "between": [5, 6], "them": [5, 6], "call": [5, 6, 10], "insid": [5, 6], "jupyt": [5, 6, 11, 12], "displai": [5, 6], "graphiz": [5, 6], "__getitem__": [5, 6], "colnam": [5, 6], "stage_ent": [5, 6], "mapper": [5, 6], "indexf": [5, 6], "accord": [5, 6], "everi": [5, 6, 9, 11, 12], "_type_": [5, 6], "frpm": [5, 6], "index": [5, 6], "wa": [5, 6, 11, 12], "mandatori": [5, 6], "respect": [5, 6, 8, 11, 12], "instanc": [5, 6, 8], "alia": [5, 6], "persist": [5, 6, 11, 12], "onlyent": [5, 6], "well": [5, 6, 11, 12], "stage": [5, 6], "do": [5, 6, 8], "NOT": [5, 6], "create_datafram": [5, 6], "addentitycolumn": [5, 6], "order": [5, 6], "given": [5, 6, 9], "sequencem": [5, 6], "combin": [5, 6], "persist_datafram": [5, 6], "get_current_dataset": [5, 6], "current": [5, 6, 9], "associ": [5, 6], "previous": [5, 6], "fetch": [5, 6], "via": [5, 6, 8], "maintain": [5, 6, 8], "create_entity_id": [5, 6], "create_entity_id_mapp": [5, 6], "add_entity_id": [5, 6], "inplac": [5, 6], "overrid": [5, 6], "uuidv5": [5, 6], "calcul": [5, 6], "over": [5, 6], "entir": [5, 6], "def_schema": [5, 6], "df_to_json": [5, 6], "is_schema": [5, 6], "without": [5, 6, 8], "import": [5, 6, 10, 11, 12], "circular": [5, 6], "known": [5, 6], "http": [5, 6], "json": [5, 6], "org": [5, 6], "draft": [5, 6], "2019": [5, 6], "09": [5, 6], "hyper": [5, 6], "notauthorizedexcept": [5, 7], "baseexcept": [5, 7], "common": [5, 7, 11, 12], "supported_schema": 6, "dot_color": 6, "9e0142": 6, "d53e4f": 6, "f46d43": 6, "fdae61": 6, "fee08b": 6, "e6f598": 6, "abdda4": 6, "66c2a5": 6, "dot_alpha": 6, "22": 6, "class": 7, "interest": 8, "foster": 8, "open": [8, 9], "welcom": [8, 9], "environ": 8, "contributor": 8, "particip": 8, "project": [8, 9, 10], "commun": 8, "harass": 8, "free": [8, 9], "experi": [8, 11, 12], "everyon": 8, "regardless": 8, "ag": 8, "bodi": 8, "disabl": 8, "ethnic": 8, "gender": 8, "express": 8, "nation": 8, "person": 8, "appear": 8, "race": 8, "religion": 8, "sexual": 8, "orient": 8, "exampl": [8, 11, 12], "behavior": 8, "contribut": 8, "posit": 8, "includ": [8, 9], "inclus": 8, "languag": 8, "Being": 8, "differ": [8, 11, 12], "viewpoint": 8, "gracefulli": 8, "accept": 8, "construct": 8, "critic": 8, "focus": 8, "best": 8, "empathi": 8, "toward": 8, "member": 8, "unaccept": 8, "imageri": 8, "unwelcom": 8, "attent": 8, "advanc": 8, "troll": 8, "insult": 8, "derogatori": 8, "comment": 8, "polit": 8, "attack": 8, "public": 8, "privat": 8, "publish": 8, "inform": 8, "physic": 8, "electron": 8, "address": 8, "explicit": 8, "permiss": 8, "could": 8, "reason": 8, "consid": 8, "inappropri": 8, "profession": 8, "clarifi": 8, "expect": 8, "take": 8, "appropri": [8, 9], "fair": 8, "correct": 8, "action": 8, "right": 8, "remov": 8, "edit": 8, "reject": 8, "commit": [8, 9], "wiki": 8, "issu": [8, 9], "align": 8, "ban": 8, "temporarili": 8, "perman": 8, "thei": [8, 9], "deem": 8, "threaten": 8, "offens": 8, "harm": 8, "appli": 8, "both": 8, "within": 8, "space": 8, "when": [8, 9], "its": [8, 9], "offici": [8, 9], "mail": 8, "post": [8, 9], "social": 8, "media": 8, "account": 8, "act": 8, "appoint": 8, "onlin": 8, "offlin": 8, "event": [8, 11, 12], "mai": 8, "further": 8, "abus": 8, "contact": 8, "team": 8, "review": 8, "investig": 8, "complaint": 8, "respond": 8, "circumst": 8, "oblig": 8, "confidenti": 8, "regard": 8, "incid": 8, "detail": [8, 9], "polici": 8, "separ": 8, "who": 8, "follow": [8, 11, 12], "good": 8, "faith": 8, "face": 8, "temporari": 8, "repercuss": 8, "determin": 8, "leadership": 8, "adapt": 8, "coven": 8, "homepag": 8, "4": 8, "greatli": 9, "appreci": 9, "littl": 9, "bit": 9, "help": 9, "credit": 9, "alwai": 9, "you": 9, "pleas": 9, "your": 9, "oper": 9, "system": 9, "about": 9, "local": 9, "might": 9, "troubleshoot": 9, "step": 9, "reproduc": 9, "look": 9, "github": 9, "anyth": 9, "tag": 9, "want": 9, "whoever": 9, "enhanc": 9, "can": 9, "never": 9, "enough": 9, "feel": 9, "doc": 9, "docstr": 9, "even": 9, "web": 9, "blog": 9, "articl": 9, "propos": 9, "explain": 9, "would": 9, "work": 9, "keep": 9, "scope": 9, "narrow": 9, "possibl": 9, "easier": 9, "rememb": 9, "volunt": 9, "driven": 9, "readi": 9, "here": 9, "up": 9, "develop": 9, "download": 9, "copi": 9, "poetri": 9, "git": 9, "similar": 9, "branch": 9, "chang": 9, "checkout": 9, "b": 9, "bugfix": 9, "re": 9, "done": [9, 11, 12], "conform": 9, "format": [9, 11, 12], "pass": 9, "test": 9, "meet": 9, "addit": 9, "updat": 9, "support": 9, "python": [9, 11, 12], "note": 9, "releas": 9, "By": 9, "agre": 9, "abid": 9, "term": 9, "To": [10, 11, 12], "ivcap_servic": 10, "ivcap_sdk_servic": 10, "print": [10, 11, 12], "modulenotfounderror": 10, "traceback": 10, "most": 10, "recent": 10, "last": 10, "cell": 10, "line": [10, 11, 12], "3": 10, "No": 10, "modul": 10, "interact": [11, 12], "fabric": [11, 12], "much": [11, 12], "simpler": [11, 12], "mayb": [11, 12], "along": [11, 12], "classic": [11, 12], "elementari": [11, 12], "school": [11, 12], "grow": [11, 12], "grass": [11, 12], "seed": [11, 12], "amount": [11, 12], "water": [11, 12], "so": [11, 12], "often": [11, 12], "img": [11, 12], "taken": [11, 12], "observ": [11, 12], "common_n": [11, 12], "geo_location_": [11, 12], "geo_loc": [11, 12], "geograph": [11, 12], "coordin": [11, 12], "place": [11, 12], "elev": [11, 12], "locat": [11, 12], "wg": [11, 12], "84": [11, 12], "alon": [11, 12], "meter": [11, 12], "latitud": [11, 12], "For": [11, 12], "37": [11, 12], "42242": [11, 12], "longitud": [11, 12], "122": [11, 12], "08585": [11, 12], "geo_line_": [11, 12], "geo_lin": [11, 12], "begin": [11, 12], "end": [11, 12], "image_": [11, 12], "imag": [11, 12], "url": [11, 12], "uri": [11, 12], "width": [11, 12], "pixel": [11, 12], "unit": [11, 12], "height": [11, 12], "datetim": [11, 12], "time": [11, 12], "iso": [11, 12], "8601": [11, 12], "visualis": [11, 12], "relationship": [11, 12], "notebook": [11, 12], "10": [11, 12], "run": [11, 12], "ivcap_prov": [11, 12], "ivcap_param": [11, 12], "db": [11, 12], "first": [11, 12], "bg_n": [11, 12], "blue_growth": [11, 12], "ivcap_n": [11, 12], "qimage_": [11, 12], "quadrat_imag": [11, 12], "image_artifact_": [11, 12], "image_artifact": [11, 12]}, "objects": {"": [[5, 0, 0, "-", "ivcap_df"]], "ivcap_df": [[5, 1, 1, "", "ColType"], [5, 1, 1, "", "Column"], [5, 1, 1, "", "Connector"], [5, 4, 1, "", "DEF_SCHEMA"], [5, 1, 1, "", "DataItem"], [5, 1, 1, "", "DataSet"], [5, 4, 1, "", "ENTITY_COL_NAME"], [5, 1, 1, "", "IdColumn"], [5, 5, 1, "", "NotAuthorizedException"], [5, 1, 1, "", "RefColumn"], [5, 1, 1, "", "Schema"], [5, 4, 1, "", "__version__"], [2, 0, 0, "-", "column"], [3, 0, 0, "-", "connector"], [5, 7, 1, "", "create_connector"], [4, 0, 0, "-", "dataSet"], [6, 0, 0, "-", "schema"], [7, 0, 0, "-", "types"]], "ivcap_df.ColType": [[5, 2, 1, "", "BOOLEAN"], [5, 2, 1, "", "DATE"], [5, 2, 1, "", "DATETIME64_NS_TZ"], [5, 2, 1, "", "ENTITY"], [5, 2, 1, "", "FLOAT16"], [5, 2, 1, "", "FLOAT32"], [5, 2, 1, "", "FLOAT64"], [5, 2, 1, "", "INT16"], [5, 2, 1, "", "INT32"], [5, 2, 1, "", "INT64"], [5, 2, 1, "", "INT8"], [5, 2, 1, "", "REF"], [5, 2, 1, "", "STRING"], [5, 2, 1, "", "UINT16"], [5, 2, 1, "", "UINT32"], [5, 2, 1, "", "UINT64"], [5, 2, 1, "", "UINT8"], [5, 2, 1, "", "UUID"]], "ivcap_df.Column": [[5, 3, 1, "", "__repr__"], [5, 2, 1, "", "ctype"], [5, 3, 1, "", "def_value"], [5, 2, 1, "", "default"], [5, 2, 1, "", "description"], [5, 3, 1, "", "from_dict"], [5, 3, 1, "", "hash_value"], [5, 3, 1, "", "is_equal"], [5, 3, 1, "", "is_nullable"], [5, 3, 1, "", "is_valid"], [5, 2, 1, "", "name"], [5, 2, 1, "", "required"], [5, 3, 1, "", "to_json_schema"]], "ivcap_df.Connector": [[5, 3, 1, "", "close"], [5, 3, 1, "", "get_all_for_schema"], [5, 3, 1, "", "get_all_schemas_for_namespace"], [5, 3, 1, "", "get_schema"], [5, 3, 1, "", "insert_data_frame"], [5, 3, 1, "", "query_to_df"], [5, 3, 1, "", "register_schema"], [5, 3, 1, "", "upload_artifact"]], "ivcap_df.DataItem": [[5, 3, 1, "", "__hash__"], [5, 3, 1, "", "__repr__"], [5, 2, 1, "", "_data"], [5, 3, 1, "", "graph"], [5, 3, 1, "", "graph_many"], [5, 2, 1, "", "id"], [5, 3, 1, "", "prop"], [5, 3, 1, "", "props"], [5, 2, 1, "", "schema"]], "ivcap_df.DataSet": [[5, 3, 1, "", "__repr__"], [5, 3, 1, "", "add"], [5, 3, 1, "", "add_data_items"], [5, 3, 1, "", "add_df"], [5, 2, 1, "", "df"], [5, 3, 1, "", "graph"], [5, 3, 1, "", "isempty"], [5, 2, 1, "", "items"], [5, 3, 1, "", "query"], [5, 3, 1, "", "query_one"], [5, 2, 1, "", "schema"]], "ivcap_df.IdColumn": [[5, 3, 1, "", "__repr__"], [5, 3, 1, "", "get_urn_for"], [5, 3, 1, "", "hash_value"], [5, 3, 1, "", "is_equal"], [5, 3, 1, "", "is_nullable"], [5, 3, 1, "", "to_json_schema"]], "ivcap_df.RefColumn": [[5, 3, 1, "", "__repr__"], [5, 2, 1, "", "_schema"], [5, 3, 1, "", "dataset"], [5, 3, 1, "", "from_dict"], [5, 3, 1, "", "get_urn_for"], [5, 3, 1, "", "hash_value"], [5, 3, 1, "", "is_equal"], [5, 3, 1, "", "schema"], [5, 3, 1, "", "schema_name"], [5, 3, 1, "", "to_json_schema"], [5, 2, 1, "", "urn"]], "ivcap_df.Schema": [[5, 3, 1, "", "__getitem__"], [5, 3, 1, "", "__repr__"], [5, 2, 1, "", "_ds"], [5, 3, 1, "", "add_entity_id"], [5, 3, 1, "", "column"], [5, 6, 1, "", "column_names"], [5, 2, 1, "", "columns"], [5, 3, 1, "", "create_dataframe"], [5, 3, 1, "", "create_entity_id"], [5, 3, 1, "", "create_entity_id_mapper"], [5, 3, 1, "", "create_urn"], [5, 3, 1, "", "create_uuid"], [5, 3, 1, "", "dataset"], [5, 2, 1, "", "description"], [5, 3, 1, "", "df_to_json"], [5, 3, 1, "", "entity"], [5, 3, 1, "", "from_dict"], [5, 3, 1, "", "get_current_dataset"], [5, 3, 1, "", "graph"], [5, 2, 1, "", "idColumn"], [5, 3, 1, "", "is_equal"], [5, 3, 1, "", "is_schema"], [5, 3, 1, "", "is_valid"], [5, 3, 1, "", "load"], [5, 2, 1, "", "name"], [5, 2, 1, "", "namespace"], [5, 3, 1, "", "parse_urn"], [5, 3, 1, "", "persist"], [5, 3, 1, "", "persist_dataframe"], [5, 3, 1, "", "property"], [5, 3, 1, "", "query"], [5, 3, 1, "", "query_one"], [5, 3, 1, "", "stage_entities"], [5, 3, 1, "", "to_dot"], [5, 3, 1, "", "to_json_schema"], [5, 2, 1, "", "urn"], [5, 3, 1, "", "urn2urn_prefix"], [5, 2, 1, "", "urnPrefix"], [5, 2, 1, "", "version"], [5, 3, 1, "", "walk"]], "ivcap_df.column": [[2, 4, 1, "", "ANY_SCHEMA"], [2, 1, 1, "", "ColType"], [2, 1, 1, "", "Column"], [2, 4, 1, "", "ENTITY_COL_NAME"], [2, 1, 1, "", "IdColumn"], [2, 4, 1, "", "JsonSchemaType"], [2, 4, 1, "", "NAMESPACE_IVCAP"], [2, 1, 1, "", "RefColumn"], [2, 7, 1, "", "create_uuid"], [2, 4, 1, "", "pandaTypes"], [2, 7, 1, "", "safe_sql_name"], [2, 4, 1, "", "seriesValidator"], [2, 4, 1, "", "uuid_re"], [2, 7, 1, "", "validate_urn"], [2, 7, 1, "", "validate_uuid"]], "ivcap_df.column.ColType": [[2, 2, 1, "", "BOOLEAN"], [2, 2, 1, "", "DATE"], [2, 2, 1, "", "DATETIME64_NS_TZ"], [2, 2, 1, "", "ENTITY"], [2, 2, 1, "", "FLOAT16"], [2, 2, 1, "", "FLOAT32"], [2, 2, 1, "", "FLOAT64"], [2, 2, 1, "", "INT16"], [2, 2, 1, "", "INT32"], [2, 2, 1, "", "INT64"], [2, 2, 1, "", "INT8"], [2, 2, 1, "", "REF"], [2, 2, 1, "", "STRING"], [2, 2, 1, "", "UINT16"], [2, 2, 1, "", "UINT32"], [2, 2, 1, "", "UINT64"], [2, 2, 1, "", "UINT8"], [2, 2, 1, "", "UUID"]], "ivcap_df.column.Column": [[2, 3, 1, "", "__repr__"], [2, 2, 1, "", "ctype"], [2, 3, 1, "", "def_value"], [2, 2, 1, "", "default"], [2, 2, 1, "", "description"], [2, 3, 1, "", "from_dict"], [2, 3, 1, "", "hash_value"], [2, 3, 1, "", "is_equal"], [2, 3, 1, "", "is_nullable"], [2, 3, 1, "", "is_valid"], [2, 2, 1, "", "name"], [2, 2, 1, "", "required"], [2, 3, 1, "", "to_json_schema"]], "ivcap_df.column.IdColumn": [[2, 3, 1, "", "__repr__"], [2, 3, 1, "", "get_urn_for"], [2, 3, 1, "", "hash_value"], [2, 3, 1, "", "is_equal"], [2, 3, 1, "", "is_nullable"], [2, 3, 1, "", "to_json_schema"]], "ivcap_df.column.RefColumn": [[2, 3, 1, "", "__repr__"], [2, 2, 1, "", "_schema"], [2, 3, 1, "", "dataset"], [2, 3, 1, "", "from_dict"], [2, 3, 1, "", "get_urn_for"], [2, 3, 1, "", "hash_value"], [2, 3, 1, "", "is_equal"], [2, 3, 1, "", "schema"], [2, 3, 1, "", "schema_name"], [2, 3, 1, "", "to_json_schema"], [2, 2, 1, "", "urn"]], "ivcap_df.connector": [[3, 1, 1, "", "Connector"], [3, 7, 1, "", "_create_cozo_connector"], [3, 7, 1, "", "_create_db_connector"], [3, 7, 1, "", "_create_ivcap_connector"], [3, 7, 1, "", "create_connector"], [3, 4, 1, "", "type2klass"]], "ivcap_df.connector.Connector": [[3, 3, 1, "", "close"], [3, 3, 1, "", "get_all_for_schema"], [3, 3, 1, "", "get_all_schemas_for_namespace"], [3, 3, 1, "", "get_schema"], [3, 3, 1, "", "insert_data_frame"], [3, 3, 1, "", "query_to_df"], [3, 3, 1, "", "register_schema"], [3, 3, 1, "", "upload_artifact"]], "ivcap_df.dataSet": [[4, 1, 1, "", "DataItem"], [4, 1, 1, "", "DataSet"]], "ivcap_df.dataSet.DataItem": [[4, 3, 1, "", "__hash__"], [4, 3, 1, "", "__repr__"], [4, 2, 1, "", "_data"], [4, 3, 1, "", "graph"], [4, 3, 1, "", "graph_many"], [4, 2, 1, "", "id"], [4, 3, 1, "", "prop"], [4, 3, 1, "", "props"], [4, 2, 1, "", "schema"]], "ivcap_df.dataSet.DataSet": [[4, 3, 1, "", "__repr__"], [4, 3, 1, "", "add"], [4, 3, 1, "", "add_data_items"], [4, 3, 1, "", "add_df"], [4, 2, 1, "", "df"], [4, 3, 1, "", "graph"], [4, 3, 1, "", "isempty"], [4, 2, 1, "", "items"], [4, 3, 1, "", "query"], [4, 3, 1, "", "query_one"], [4, 2, 1, "", "schema"]], "ivcap_df.schema": [[6, 4, 1, "", "DEF_SCHEMA"], [6, 4, 1, "", "DOT_ALPHA"], [6, 4, 1, "", "DOT_COLORS"], [6, 4, 1, "", "SUPPORTED_SCHEMAS"], [6, 1, 1, "", "Schema"]], "ivcap_df.schema.Schema": [[6, 3, 1, "", "__getitem__"], [6, 3, 1, "", "__repr__"], [6, 2, 1, "", "_ds"], [6, 3, 1, "", "add_entity_id"], [6, 3, 1, "", "column"], [6, 6, 1, "", "column_names"], [6, 2, 1, "", "columns"], [6, 3, 1, "", "create_dataframe"], [6, 3, 1, "", "create_entity_id"], [6, 3, 1, "", "create_entity_id_mapper"], [6, 3, 1, "", "create_urn"], [6, 3, 1, "", "create_uuid"], [6, 3, 1, "", "dataset"], [6, 2, 1, "", "description"], [6, 3, 1, "", "df_to_json"], [6, 3, 1, "", "entity"], [6, 3, 1, "", "from_dict"], [6, 3, 1, "", "get_current_dataset"], [6, 3, 1, "", "graph"], [6, 2, 1, "", "idColumn"], [6, 3, 1, "", "is_equal"], [6, 3, 1, "", "is_schema"], [6, 3, 1, "", "is_valid"], [6, 3, 1, "", "load"], [6, 2, 1, "", "name"], [6, 2, 1, "", "namespace"], [6, 3, 1, "", "parse_urn"], [6, 3, 1, "", "persist"], [6, 3, 1, "", "persist_dataframe"], [6, 3, 1, "", "property"], [6, 3, 1, "", "query"], [6, 3, 1, "", "query_one"], [6, 3, 1, "", "stage_entities"], [6, 3, 1, "", "to_dot"], [6, 3, 1, "", "to_json_schema"], [6, 2, 1, "", "urn"], [6, 3, 1, "", "urn2urn_prefix"], [6, 2, 1, "", "urnPrefix"], [6, 2, 1, "", "version"], [6, 3, 1, "", "walk"]], "ivcap_df.types": [[7, 5, 1, "", "NotAuthorizedException"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:data", "5": "py:exception", "6": "py:property", "7": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"], "7": ["py", "function", "Python function"]}, "titleterms": {"ivcap_cli": 0, "doc": 0, "api": 1, "refer": 1, "ivcap_df": [2, 3, 4, 5, 6, 7], "column": 2, "modul": [2, 3, 4, 6, 7], "content": [2, 3, 4, 5, 6, 7], "class": [2, 3, 4, 5, 6], "function": [2, 3, 5], "attribut": [2, 3, 5, 6, 8], "connector": 3, "dataset": 4, "submodul": 5, "packag": 5, "schema": [6, 11, 12], "type": [7, 9], "code": [8, 9], "conduct": [8, 9], "our": 8, "pledg": 8, "standard": 8, "respons": 8, "scope": 8, "enforc": 8, "contribut": 9, "report": 9, "bug": 9, "fix": 9, "implement": 9, "featur": 9, "write": 9, "document": 9, "submit": 9, "feedback": 9, "get": 9, "start": 9, "pull": 9, "request": 9, "guidelin": 9, "exampl": 10, "usag": 10, "ivcap": [11, 12], "df": [11, 12], "defin": [11, 12], "load": [11, 12], "data": [11, 12]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"\u2018ivcap_client\u2019 Docs": [[0, "ivcap-client-docs"]], "API Reference": [[1, "api-reference"]], "ivcap_df.column": [[2, "module-ivcap_df.column"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"]], "Functions": [[2, "functions"], [3, "functions"], [5, "functions"]], "Attributes": [[2, "attributes"], [3, "attributes"], [5, "attributes"], [6, "attributes"]], "ivcap_df.connector": [[3, "module-ivcap_df.connector"]], "ivcap_df.dataSet": [[4, "module-ivcap_df.dataSet"]], "ivcap_df": [[5, "module-ivcap_df"]], "Submodules": [[5, "submodules"]], "Package Contents": [[5, "package-contents"]], "ivcap_df.schema": [[6, "module-ivcap_df.schema"]], "ivcap_df.types": [[7, "module-ivcap_df.types"]], "Code of Conduct": [[8, "code-of-conduct"], [9, "code-of-conduct"]], "Our Pledge": [[8, "our-pledge"]], "Our Standards": [[8, "our-standards"]], "Our Responsibilities": [[8, "our-responsibilities"]], "Scope": [[8, "scope"]], "Enforcement": [[8, "enforcement"]], "Attribution": [[8, "attribution"]], "Contributing": [[9, "contributing"]], "Types of Contributions": [[9, "types-of-contributions"]], "Report Bugs": [[9, "report-bugs"]], "Fix Bugs": [[9, "fix-bugs"]], "Implement Features": [[9, "implement-features"]], "Write Documentation": [[9, "write-documentation"]], "Submit Feedback": [[9, "submit-feedback"]], "Get Started": [[9, "get-started"]], "Pull Request Guidelines": [[9, "pull-request-guidelines"]], "Example usage": [[10, "example-usage"]], "ivcap-df": [[11, "ivcap-df"], [12, "ivcap-df"]], "Defining Schemas": [[11, "defining-schemas"], [12, "defining-schemas"]], "Loading Data": [[11, "loading-data"], [12, "loading-data"]]}, "indexentries": {"any_schema (in module ivcap_df.column)": [[2, "ivcap_df.column.ANY_SCHEMA"]], "boolean (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.BOOLEAN"]], "coltype (class in ivcap_df.column)": [[2, "ivcap_df.column.ColType"]], "column (class in ivcap_df.column)": [[2, "ivcap_df.column.Column"]], "date (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.DATE"]], "datetime64_ns_tz (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.DATETIME64_NS_TZ"]], "entity (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.ENTITY"]], "entity_col_name (in module ivcap_df.column)": [[2, "ivcap_df.column.ENTITY_COL_NAME"]], "float16 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.FLOAT16"]], "float32 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.FLOAT32"]], "float64 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.FLOAT64"]], "int16 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.INT16"]], "int32 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.INT32"]], "int64 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.INT64"]], "int8 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.INT8"]], "idcolumn (class in ivcap_df.column)": [[2, "ivcap_df.column.IdColumn"]], "jsonschematype (in module ivcap_df.column)": [[2, "ivcap_df.column.JsonSchemaType"]], "namespace_ivcap (in module ivcap_df.column)": [[2, "ivcap_df.column.NAMESPACE_IVCAP"]], "ref (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.REF"]], "refcolumn (class in ivcap_df.column)": [[2, "ivcap_df.column.RefColumn"]], "string (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.STRING"]], "uint16 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.UINT16"]], "uint32 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.UINT32"]], "uint64 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.UINT64"]], "uint8 (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.UINT8"]], "uuid (ivcap_df.column.coltype attribute)": [[2, "ivcap_df.column.ColType.UUID"]], "__repr__() (ivcap_df.column.column method)": [[2, "ivcap_df.column.Column.__repr__"]], "__repr__() (ivcap_df.column.idcolumn method)": [[2, "ivcap_df.column.IdColumn.__repr__"]], "__repr__() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.__repr__"]], "_schema (ivcap_df.column.refcolumn attribute)": [[2, "ivcap_df.column.RefColumn._schema"]], "create_uuid() (in module ivcap_df.column)": [[2, "ivcap_df.column.create_uuid"]], "ctype (ivcap_df.column.column attribute)": [[2, "ivcap_df.column.Column.ctype"]], "dataset() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.dataset"]], "def_value() (ivcap_df.column.column method)": [[2, "ivcap_df.column.Column.def_value"]], "default (ivcap_df.column.column attribute)": [[2, "ivcap_df.column.Column.default"]], "description (ivcap_df.column.column attribute)": [[2, "ivcap_df.column.Column.description"]], "from_dict() (ivcap_df.column.column class method)": [[2, "ivcap_df.column.Column.from_dict"]], "from_dict() (ivcap_df.column.refcolumn class method)": [[2, "ivcap_df.column.RefColumn.from_dict"]], "get_urn_for() (ivcap_df.column.idcolumn method)": [[2, "ivcap_df.column.IdColumn.get_urn_for"]], "get_urn_for() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.get_urn_for"]], "hash_value() (ivcap_df.column.column method)": [[2, "ivcap_df.column.Column.hash_value"]], "hash_value() (ivcap_df.column.idcolumn method)": [[2, "ivcap_df.column.IdColumn.hash_value"]], "hash_value() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.hash_value"]], "is_equal() (ivcap_df.column.column method)": [[2, "ivcap_df.column.Column.is_equal"]], "is_equal() (ivcap_df.column.idcolumn method)": [[2, "ivcap_df.column.IdColumn.is_equal"]], "is_equal() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.is_equal"]], "is_nullable() (ivcap_df.column.column method)": [[2, "ivcap_df.column.Column.is_nullable"]], "is_nullable() (ivcap_df.column.idcolumn method)": [[2, "ivcap_df.column.IdColumn.is_nullable"]], "is_valid() (ivcap_df.column.column method)": [[2, "ivcap_df.column.Column.is_valid"]], "ivcap_df.column": [[2, "module-ivcap_df.column"]], "module": [[2, "module-ivcap_df.column"], [3, "module-ivcap_df.connector"], [4, "module-ivcap_df.dataSet"], [5, "module-ivcap_df"], [6, "module-ivcap_df.schema"], [7, "module-ivcap_df.types"]], "name (ivcap_df.column.column attribute)": [[2, "ivcap_df.column.Column.name"]], "pandatypes (in module ivcap_df.column)": [[2, "ivcap_df.column.pandaTypes"]], "required (ivcap_df.column.column attribute)": [[2, "ivcap_df.column.Column.required"]], "safe_sql_name() (in module ivcap_df.column)": [[2, "ivcap_df.column.safe_sql_name"]], "schema() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.schema"]], "schema_name() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.schema_name"]], "seriesvalidator (in module ivcap_df.column)": [[2, "ivcap_df.column.seriesValidator"]], "to_json_schema() (ivcap_df.column.column method)": [[2, "ivcap_df.column.Column.to_json_schema"]], "to_json_schema() (ivcap_df.column.idcolumn method)": [[2, "ivcap_df.column.IdColumn.to_json_schema"]], "to_json_schema() (ivcap_df.column.refcolumn method)": [[2, "ivcap_df.column.RefColumn.to_json_schema"]], "urn (ivcap_df.column.refcolumn attribute)": [[2, "ivcap_df.column.RefColumn.urn"]], "uuid_re (in module ivcap_df.column)": [[2, "ivcap_df.column.uuid_re"]], "validate_urn() (in module ivcap_df.column)": [[2, "ivcap_df.column.validate_urn"]], "validate_uuid() (in module ivcap_df.column)": [[2, "ivcap_df.column.validate_uuid"]], "connector (class in ivcap_df.connector)": [[3, "ivcap_df.connector.Connector"]], "_create_cozo_connector() (in module ivcap_df.connector)": [[3, "ivcap_df.connector._create_cozo_connector"]], "_create_db_connector() (in module ivcap_df.connector)": [[3, "ivcap_df.connector._create_db_connector"]], "_create_ivcap_connector() (in module ivcap_df.connector)": [[3, "ivcap_df.connector._create_ivcap_connector"]], "close() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.close"]], "create_connector() (in module ivcap_df.connector)": [[3, "ivcap_df.connector.create_connector"]], "get_all_for_schema() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.get_all_for_schema"]], "get_all_schemas_for_namespace() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.get_all_schemas_for_namespace"]], "get_schema() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.get_schema"]], "insert_data_frame() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.insert_data_frame"]], "ivcap_df.connector": [[3, "module-ivcap_df.connector"]], "query_to_df() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.query_to_df"]], "register_schema() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.register_schema"]], "type2klass (in module ivcap_df.connector)": [[3, "ivcap_df.connector.type2klass"]], "upload_artifact() (ivcap_df.connector.connector method)": [[3, "ivcap_df.connector.Connector.upload_artifact"]], "dataitem (class in ivcap_df.dataset)": [[4, "ivcap_df.dataSet.DataItem"]], "dataset (class in ivcap_df.dataset)": [[4, "ivcap_df.dataSet.DataSet"]], "__hash__() (ivcap_df.dataset.dataitem method)": [[4, "ivcap_df.dataSet.DataItem.__hash__"]], "__repr__() (ivcap_df.dataset.dataitem method)": [[4, "ivcap_df.dataSet.DataItem.__repr__"]], "__repr__() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.__repr__"]], "_data (ivcap_df.dataset.dataitem attribute)": [[4, "ivcap_df.dataSet.DataItem._data"]], "add() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.add"]], "add_data_items() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.add_data_items"]], "add_df() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.add_df"]], "df (ivcap_df.dataset.dataset attribute)": [[4, "ivcap_df.dataSet.DataSet.df"]], "graph() (ivcap_df.dataset.dataitem method)": [[4, "ivcap_df.dataSet.DataItem.graph"]], "graph() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.graph"]], "graph_many() (ivcap_df.dataset.dataitem class method)": [[4, "ivcap_df.dataSet.DataItem.graph_many"]], "id (ivcap_df.dataset.dataitem attribute)": [[4, "ivcap_df.dataSet.DataItem.id"]], "isempty() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.isempty"]], "items (ivcap_df.dataset.dataset attribute)": [[4, "ivcap_df.dataSet.DataSet.items"]], "ivcap_df.dataset": [[4, "module-ivcap_df.dataSet"]], "prop() (ivcap_df.dataset.dataitem method)": [[4, "ivcap_df.dataSet.DataItem.prop"]], "props() (ivcap_df.dataset.dataitem method)": [[4, "ivcap_df.dataSet.DataItem.props"]], "query() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.query"]], "query_one() (ivcap_df.dataset.dataset method)": [[4, "ivcap_df.dataSet.DataSet.query_one"]], "schema (ivcap_df.dataset.dataitem attribute)": [[4, "ivcap_df.dataSet.DataItem.schema"]], "schema (ivcap_df.dataset.dataset attribute)": [[4, "ivcap_df.dataSet.DataSet.schema"]], "boolean (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.BOOLEAN"]], "coltype (class in ivcap_df)": [[5, "ivcap_df.ColType"]], "column (class in ivcap_df)": [[5, "ivcap_df.Column"]], "connector (class in ivcap_df)": [[5, "ivcap_df.Connector"]], "date (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.DATE"]], "datetime64_ns_tz (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.DATETIME64_NS_TZ"]], "def_schema (in module ivcap_df)": [[5, "ivcap_df.DEF_SCHEMA"]], "dataitem (class in ivcap_df)": [[5, "ivcap_df.DataItem"]], "dataset (class in ivcap_df)": [[5, "ivcap_df.DataSet"]], "entity (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.ENTITY"]], "entity_col_name (in module ivcap_df)": [[5, "ivcap_df.ENTITY_COL_NAME"]], "float16 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.FLOAT16"]], "float32 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.FLOAT32"]], "float64 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.FLOAT64"]], "int16 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.INT16"]], "int32 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.INT32"]], "int64 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.INT64"]], "int8 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.INT8"]], "idcolumn (class in ivcap_df)": [[5, "ivcap_df.IdColumn"]], "notauthorizedexception": [[5, "ivcap_df.NotAuthorizedException"], [7, "ivcap_df.types.NotAuthorizedException"]], "ref (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.REF"]], "refcolumn (class in ivcap_df)": [[5, "ivcap_df.RefColumn"]], "string (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.STRING"]], "schema (class in ivcap_df)": [[5, "ivcap_df.Schema"]], "uint16 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.UINT16"]], "uint32 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.UINT32"]], "uint64 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.UINT64"]], "uint8 (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.UINT8"]], "uuid (ivcap_df.coltype attribute)": [[5, "ivcap_df.ColType.UUID"]], "__getitem__() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.__getitem__"]], "__hash__() (ivcap_df.dataitem method)": [[5, "ivcap_df.DataItem.__hash__"]], "__repr__() (ivcap_df.column method)": [[5, "ivcap_df.Column.__repr__"]], "__repr__() (ivcap_df.dataitem method)": [[5, "ivcap_df.DataItem.__repr__"]], "__repr__() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.__repr__"]], "__repr__() (ivcap_df.idcolumn method)": [[5, "ivcap_df.IdColumn.__repr__"]], "__repr__() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.__repr__"]], "__repr__() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.__repr__"]], "__version__ (in module ivcap_df)": [[5, "ivcap_df.__version__"]], "_data (ivcap_df.dataitem attribute)": [[5, "ivcap_df.DataItem._data"]], "_ds (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema._ds"]], "_schema (ivcap_df.refcolumn attribute)": [[5, "ivcap_df.RefColumn._schema"]], "add() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.add"]], "add_data_items() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.add_data_items"]], "add_df() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.add_df"]], "add_entity_id() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.add_entity_id"]], "close() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.close"]], "column() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.column"]], "column_names (ivcap_df.schema property)": [[5, "ivcap_df.Schema.column_names"]], "columns (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.columns"]], "create_connector() (in module ivcap_df)": [[5, "ivcap_df.create_connector"]], "create_dataframe() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.create_dataframe"]], "create_entity_id() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.create_entity_id"]], "create_entity_id_mapper() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.create_entity_id_mapper"]], "create_urn() (ivcap_df.schema class method)": [[5, "ivcap_df.Schema.create_urn"]], "create_uuid() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.create_uuid"]], "ctype (ivcap_df.column attribute)": [[5, "ivcap_df.Column.ctype"]], "dataset() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.dataset"]], "dataset() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.dataset"]], "def_value() (ivcap_df.column method)": [[5, "ivcap_df.Column.def_value"]], "default (ivcap_df.column attribute)": [[5, "ivcap_df.Column.default"]], "description (ivcap_df.column attribute)": [[5, "ivcap_df.Column.description"]], "description (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.description"]], "df (ivcap_df.dataset attribute)": [[5, "ivcap_df.DataSet.df"]], "df_to_json() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.df_to_json"]], "entity() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.entity"]], "from_dict() (ivcap_df.column class method)": [[5, "ivcap_df.Column.from_dict"]], "from_dict() (ivcap_df.refcolumn class method)": [[5, "ivcap_df.RefColumn.from_dict"]], "from_dict() (ivcap_df.schema class method)": [[5, "ivcap_df.Schema.from_dict"]], "get_all_for_schema() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.get_all_for_schema"]], "get_all_schemas_for_namespace() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.get_all_schemas_for_namespace"]], "get_current_dataset() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.get_current_dataset"]], "get_schema() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.get_schema"]], "get_urn_for() (ivcap_df.idcolumn method)": [[5, "ivcap_df.IdColumn.get_urn_for"]], "get_urn_for() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.get_urn_for"]], "graph() (ivcap_df.dataitem method)": [[5, "ivcap_df.DataItem.graph"]], "graph() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.graph"]], "graph() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.graph"]], "graph_many() (ivcap_df.dataitem class method)": [[5, "ivcap_df.DataItem.graph_many"]], "hash_value() (ivcap_df.column method)": [[5, "ivcap_df.Column.hash_value"]], "hash_value() (ivcap_df.idcolumn method)": [[5, "ivcap_df.IdColumn.hash_value"]], "hash_value() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.hash_value"]], "id (ivcap_df.dataitem attribute)": [[5, "ivcap_df.DataItem.id"]], "idcolumn (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.idColumn"]], "insert_data_frame() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.insert_data_frame"]], "is_equal() (ivcap_df.column method)": [[5, "ivcap_df.Column.is_equal"]], "is_equal() (ivcap_df.idcolumn method)": [[5, "ivcap_df.IdColumn.is_equal"]], "is_equal() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.is_equal"]], "is_equal() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.is_equal"]], "is_nullable() (ivcap_df.column method)": [[5, "ivcap_df.Column.is_nullable"]], "is_nullable() (ivcap_df.idcolumn method)": [[5, "ivcap_df.IdColumn.is_nullable"]], "is_schema() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.is_schema"]], "is_valid() (ivcap_df.column method)": [[5, "ivcap_df.Column.is_valid"]], "is_valid() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.is_valid"]], "isempty() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.isempty"]], "items (ivcap_df.dataset attribute)": [[5, "ivcap_df.DataSet.items"]], "ivcap_df": [[5, "module-ivcap_df"]], "load() (ivcap_df.schema class method)": [[5, "ivcap_df.Schema.load"]], "name (ivcap_df.column attribute)": [[5, "ivcap_df.Column.name"]], "name (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.name"]], "namespace (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.namespace"]], "parse_urn() (ivcap_df.schema class method)": [[5, "ivcap_df.Schema.parse_urn"]], "persist() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.persist"]], "persist_dataframe() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.persist_dataframe"]], "prop() (ivcap_df.dataitem method)": [[5, "ivcap_df.DataItem.prop"]], "property() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.property"]], "props() (ivcap_df.dataitem method)": [[5, "ivcap_df.DataItem.props"]], "query() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.query"]], "query() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.query"]], "query_one() (ivcap_df.dataset method)": [[5, "ivcap_df.DataSet.query_one"]], "query_one() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.query_one"]], "query_to_df() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.query_to_df"]], "register_schema() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.register_schema"]], "required (ivcap_df.column attribute)": [[5, "ivcap_df.Column.required"]], "schema (ivcap_df.dataitem attribute)": [[5, "ivcap_df.DataItem.schema"]], "schema (ivcap_df.dataset attribute)": [[5, "ivcap_df.DataSet.schema"]], "schema() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.schema"]], "schema_name() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.schema_name"]], "stage_entities() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.stage_entities"]], "to_dot() (ivcap_df.schema class method)": [[5, "ivcap_df.Schema.to_dot"]], "to_json_schema() (ivcap_df.column method)": [[5, "ivcap_df.Column.to_json_schema"]], "to_json_schema() (ivcap_df.idcolumn method)": [[5, "ivcap_df.IdColumn.to_json_schema"]], "to_json_schema() (ivcap_df.refcolumn method)": [[5, "ivcap_df.RefColumn.to_json_schema"]], "to_json_schema() (ivcap_df.schema method)": [[5, "ivcap_df.Schema.to_json_schema"]], "upload_artifact() (ivcap_df.connector method)": [[5, "ivcap_df.Connector.upload_artifact"]], "urn (ivcap_df.refcolumn attribute)": [[5, "ivcap_df.RefColumn.urn"]], "urn (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.urn"]], "urn2urn_prefix() (ivcap_df.schema class method)": [[5, "ivcap_df.Schema.urn2urn_prefix"]], "urnprefix (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.urnPrefix"]], "version (ivcap_df.schema attribute)": [[5, "ivcap_df.Schema.version"]], "walk() (ivcap_df.schema class method)": [[5, "ivcap_df.Schema.walk"]], "def_schema (in module ivcap_df.schema)": [[6, "ivcap_df.schema.DEF_SCHEMA"]], "dot_alpha (in module ivcap_df.schema)": [[6, "ivcap_df.schema.DOT_ALPHA"]], "dot_colors (in module ivcap_df.schema)": [[6, "ivcap_df.schema.DOT_COLORS"]], "supported_schemas (in module ivcap_df.schema)": [[6, "ivcap_df.schema.SUPPORTED_SCHEMAS"]], "schema (class in ivcap_df.schema)": [[6, "ivcap_df.schema.Schema"]], "__getitem__() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.__getitem__"]], "__repr__() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.__repr__"]], "_ds (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema._ds"]], "add_entity_id() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.add_entity_id"]], "column() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.column"]], "column_names (ivcap_df.schema.schema property)": [[6, "ivcap_df.schema.Schema.column_names"]], "columns (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.columns"]], "create_dataframe() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.create_dataframe"]], "create_entity_id() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.create_entity_id"]], "create_entity_id_mapper() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.create_entity_id_mapper"]], "create_urn() (ivcap_df.schema.schema class method)": [[6, "ivcap_df.schema.Schema.create_urn"]], "create_uuid() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.create_uuid"]], "dataset() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.dataset"]], "description (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.description"]], "df_to_json() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.df_to_json"]], "entity() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.entity"]], "from_dict() (ivcap_df.schema.schema class method)": [[6, "ivcap_df.schema.Schema.from_dict"]], "get_current_dataset() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.get_current_dataset"]], "graph() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.graph"]], "idcolumn (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.idColumn"]], "is_equal() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.is_equal"]], "is_schema() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.is_schema"]], "is_valid() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.is_valid"]], "ivcap_df.schema": [[6, "module-ivcap_df.schema"]], "load() (ivcap_df.schema.schema class method)": [[6, "ivcap_df.schema.Schema.load"]], "name (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.name"]], "namespace (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.namespace"]], "parse_urn() (ivcap_df.schema.schema class method)": [[6, "ivcap_df.schema.Schema.parse_urn"]], "persist() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.persist"]], "persist_dataframe() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.persist_dataframe"]], "property() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.property"]], "query() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.query"]], "query_one() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.query_one"]], "stage_entities() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.stage_entities"]], "to_dot() (ivcap_df.schema.schema class method)": [[6, "ivcap_df.schema.Schema.to_dot"]], "to_json_schema() (ivcap_df.schema.schema method)": [[6, "ivcap_df.schema.Schema.to_json_schema"]], "urn (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.urn"]], "urn2urn_prefix() (ivcap_df.schema.schema class method)": [[6, "ivcap_df.schema.Schema.urn2urn_prefix"]], "urnprefix (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.urnPrefix"]], "version (ivcap_df.schema.schema attribute)": [[6, "ivcap_df.schema.Schema.version"]], "walk() (ivcap_df.schema.schema class method)": [[6, "ivcap_df.schema.Schema.walk"]], "ivcap_df.types": [[7, "module-ivcap_df.types"]]}})